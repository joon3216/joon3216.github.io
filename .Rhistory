sessionInfo()
install.packages('xaringan')
data.frame(
a = 1:4,
b = 5:8,
c = 9:12
)
data.frame(
a = 1:4,
b = 5:8,
c = 9:12
)
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
knitr::opts_chunk$set(python = reticulate::eng_python)
library(reticulate)
library(dplyr)
library(ggplot2)
gather <- tidyr::gather
pmap <- purrr::pmap
set.seed(1024)
n <- 1000
t <- 1:n
f <- function(t) {t / 250 - .5}
g <- function(t) {-(.25 / 449) * t + 250 / 449}
true_theta <- c(rep(0, 249), f(250:500), rep(.75, 50), g(551:1000))
y <- true_theta + rnorm(1000, 0, 0.1)
qplot(t, y)
fusion_estimates <- function(y, theta, lambda, max_iter = 100, eps = 1e-5) {
n <- length(y)
if (missing(theta)) {theta <- y}
if (length(theta) != n) {
stop(paste0(
'\nError in fusion_estimates():\n',
'The length of given initial theta is ', length(theta),
', which is not equal to length(y) == ', n, '.'
))
}
phi <- diff(theta)
phisums_old <- cumsum(phi)
theta_1_new <- (sum(y) - sum(phisums_old)) / n
cost <- sum((y - theta)^2) + lambda * sum(abs(phi))
costs <- NULL
costs[1] <- cost # costs
there_is_a_progress <- T
iter <- 0
while (there_is_a_progress & iter < max_iter) {
# Store new phi_1 (= 0) to phi_n in phi_new
phi_new <- numeric(length = n)
for (j in 2:n) {
phisums_new <- cumsum(phi_new)
req <- sum(
phisums_old[(j - 1):(n - 1)] -
phisums_old[j - 1] + phisums_new[j - 1]
)
discri <- sum(y[j:n]) - (n - j + 1) * theta_1_new - req
if (discri < -lambda / 2) {
phi_new[j] <- (discri + lambda / 2) / (n - j + 1)
} else if (discri > lambda / 2) {
phi_new[j] <- (discri - lambda / 2) / (n - j + 1)
} # already 0 otherwise
}
phi_new <- phi_new[-1]
phisums_new <- phisums_new[-1]
theta <- c(theta_1_new, theta_1_new + phisums_new)
cost <- sum((y - theta)^2) + lambda * sum(abs(phi_new))
theta_1_new <- (sum(y) - sum(phisums_new)) / n
phisums_old <- phisums_new
iter <- iter + 1
costs[iter + 1] <- cost
there_is_a_progress <- !(abs(costs[iter] - cost) <= eps)
}
list(
theta = theta,
phi = phi_new,
lambda = lambda,
iter = iter,
costs = costs # the first cost is calculated at iteration 0
)
}
Start <- rep(.5, n)
start_r <- Sys.time()
example1 <- fusion_estimates(y, theta = Start, lambda = 1, max_iter = 1000)
end_r <- Sys.time()
qplot(
seq_along(example1$costs) - 1, example1$costs,
geom = 'line',
xlab = 'Iteration', ylab = 'Cost function'
)
start_r
end_r
end_r - start_r
start_r <- "2019-05-29 16:59:53 EDT"
end_r <- "2019-05-29 17:00:06 EDT"
end_r - start_r
start_r <- as.POSIXct("2019-05-29 16:59:53 EDT")
end_r <- as.POSIXct("2019-05-29 17:00:06 EDT")
end_r - start_r
cat('Time difference of 13.06109 secs')
cat('Time difference of 13.06109 secs')
y
t
start
Start
y
t
write.csv('generated_y.csv', y)
?write.csv
write.csv(y, 'generated_y.csv')
getwd()
y2 <- scan('../../files/generated_y.txt')
y2 <- scan('files/generated_y.txt')
y2
setequal(y, y2)
y
y2
plot(1:1000, y2)
plot(1:1000, y)
y2 - y
y2 - y
example1
str(example1)
write.csv(example1$theta, 'example1_theta')
write.csv(example1$costs, 'example1_costs')
tibble(t, y, Start, `Estimated theta` = example1$theta) %>%
gather(Type, value, -(t:y)) %>%
mutate(Type = factor(Type, levels = c('Start', 'Estimated theta'))) %>%
ggplot(aes(x = t)) +
geom_point(aes(y = y), pch = 21, alpha = .25) +
geom_line(aes(y = value, col = Type)) +
scale_colour_manual(values = c('#56B4E9', 'black')) +
labs(col = '') +
theme(
legend.background = element_rect(fill = 'transparent'),
legend.position = c(.845, .895)
)
tibble(t, y, Start, `Estimated theta` = example1$theta) %>%
gather(Type, value, -(t:y)) %>%
mutate(Type = factor(Type, levels = c('Start', 'Estimated theta'))) %>%
ggplot(aes(x = t)) +
geom_point(aes(y = y), pch = 21, alpha = .25) +
geom_line(aes(y = value, col = Type)) +
scale_colour_manual(values = c('#56B4E9', 'black')) +
labs(col = '') +
theme(
legend.background = element_rect(fill = 'transparent'),
legend.position = c(.845, .895)
)
pmap(
list(lambda = list(5, 10, 20, 50, 100)),
fusion_estimates,
y = y, theta = rep(mean(y), n)
) %>%
sapply(function(d){d$theta}) %>%
'colnames<-'(c('5', '10', '20', '50', '100')) %>%
as_tibble() %>%
cbind(tibble(t = t, y = y)) %>%
gather(lambda, value, -(t:y)) %>%
mutate(
lambda = factor(lambda, levels = c('5', '10', '20', '50', '100'))
) %>%
ggplot(aes(x = t, y = y, col = lambda)) +
geom_point(pch = 21, alpha = .1) +
geom_line(aes(y = value)) +
theme(legend.position = 'top')
rel1 <- pmap(
list(lambda = list(5, 10, 20, 50, 100)),
fusion_estimates,
y = y, theta = rep(mean(y), n)
) %>%
sapply(function(d){d$theta}) %>%
'colnames<-'(c('5', '10', '20', '50', '100')) %>%
as_tibble() %>%
cbind(tibble(t = t, y = y)) %>%
gather(lambda, value, -(t:y)) %>%
mutate(
lambda = factor(lambda, levels = c('5', '10', '20', '50', '100'))
)
rel1
dplyr::as_tibble(rel1)
write.csv(rel1, 'rel1.csv')
library(dplyr)
rel1 <- read_csv('files/rel1.csv')
rel1 <- readr::read_csv('files/rel1.csv')
rel1
rel1 <- readr::read_csv('files/rel1.csv', col_types = 'idfd')
rel1
rel2 <- pmap(
list(lambda = list(.1, 1, 10, 100, 1000)),
fusion_estimates, y = y, max_iter = 5000
) %>%
sapply(function(d){d$theta}) %>%
'colnames<-'(c(
'lambda = 0.1', 'lambda = 1', 'lambda = 10',
'lambda = 100', 'lambda = 1000'
)) %>%
as_tibble() %>%
cbind(tibble(t = t, y = y)) %>%
gather(lambda, value, -(t:y))
rel2
as_tibble(rel2)
rel1
rel1 %>% lambda
rel1 %>% select(lambda)
rel1 %>% pull(lambda)
as_tibble(rel2)
write.csv(rel2, 'rel2.csv')
readr::read_csv('files/rel2.csv', col_types = 'idcd')
str(example1)
install.packages('ezknitr')
?ezknitr::ezknit
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
test = data.frame(a=1:4, b = 5:8, c = 9:12)
test
as.matrix(test)
knitr::render('research_materials/2018/censored_data.Rmd')
render('research_materials/2018/censored_data.Rmd')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
getwd()
rstudioapi::getActiveDocumentContext()$path
dirname(rstudioapi::getActiveDocumentContext()$path)
sys.frame()
sys.frame(1)
sys.frame(1)$offile
sys.frame(1)$ofile
library(rstudioapi)
getActiveDocumentContext()$path
system('pwd', intern = T)
system('pwd", intern = T)
setwd(system('pwd", intern = T))
)
)
setwd(system('pwd", intern = T) )
parent.frame(2)$ofile
dirname(parent.frame(2)$ofile)
getScriptPath()
source('research_materials_2018_render.R', chdir = T)
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
getwd()
dirname(sys.frame(1)$ofile)
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
?purrr::walk
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/research_materials/2018/research_materials_2018_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render_test.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render_test.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render_test.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render_test.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
source('C:/Users/joon3/Desktop/OneDrive - University of Toronto/Documents/joon3216.github.io.local/all_render.R')
c(
# 00_lvl, or the surface level
'cv.Rmd',
'index.Rmd',
'news.Rmd',
'projects.Rmd',
'research_materials.Rmd',
# 01_lvl
## news
'news/news1.Rmd',
## projects
'projects/2019.Rmd',
## research_materials
'research_materials/2018.Rmd',
'research_materials/2019.Rmd',
## style
'style/testing.Rmd',
# 02_lvl
## projects
### 2019
'projects/2019/publishing_website.Rmd',
## research_materials
### 2018
'research_materials/2018/censored_data.Rmd',
'research_materials/2018/non_separable_penalty.Rmd',
'research_materials/2018/pgf.Rmd',
'research_materials/2018/pgf_python.Rmd',
'research_materials/2018/visualizing_confidence_regions.Rmd',
### 2019
'research_materials/2019/cross_validation_fs.Rmd',
'research_materials/2019/em_imputation.Rmd',
'research_materials/2019/em_imputation_python.Rmd',
'research_materials/2019/frog.Rmd',
'research_materials/2019/largest_roll.Rmd',
'research_materials/2019/matrix_derivatives.Rmd',
'research_materials/2019/multivariate_response.Rmd'
)
'code'
code_dir 'code'
code_dir <- 'code'
report_filename <- 'myreport.Rmd'
file.path(code_dir, report_filename)
file.path('..', code_dir, report_filename)
surface_dir
file.path('..', 'output')
